{"C:\\Users\\manto\\OneDrive\\Documents\\GitHub\\mafia-bot\\register.js":{"path":"C:\\Users\\manto\\OneDrive\\Documents\\GitHub\\mafia-bot\\register.js","statementMap":{"0":{"start":{"line":1,"column":15},"end":{"line":1,"column":33}},"1":{"start":{"line":2,"column":21},"end":{"line":2,"column":52}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":3}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1539e1bc8af298061475e5c65d8e18e21af8e554","contentHash":"ce3612d633804357df1c302e90ae475addccd1ca930e6978287503a83d8f7483"},"C:\\Users\\manto\\OneDrive\\Documents\\GitHub\\mafia-bot\\src\\Classes\\ScriptEngine.ts":{"path":"C:\\Users\\manto\\OneDrive\\Documents\\GitHub\\mafia-bot\\src\\Classes\\ScriptEngine.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":58},"end":{"line":3,"column":88}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":29}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":24}},"4":{"start":{"line":11,"column":8},"end":{"line":12,"column":25}},"5":{"start":{"line":12,"column":12},"end":{"line":12,"column":25}},"6":{"start":{"line":13,"column":8},"end":{"line":14,"column":25}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":25}},"8":{"start":{"line":15,"column":8},"end":{"line":16,"column":25}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},"10":{"start":{"line":17,"column":8},"end":{"line":18,"column":25}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":25}},"12":{"start":{"line":19,"column":8},"end":{"line":20,"column":25}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"14":{"start":{"line":21,"column":8},"end":{"line":22,"column":25}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":25}},"16":{"start":{"line":23,"column":8},"end":{"line":24,"column":25}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":20}},"19":{"start":{"line":29,"column":8},"end":{"line":30,"column":23}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"21":{"start":{"line":31,"column":8},"end":{"line":41,"column":9}},"22":{"start":{"line":32,"column":23},"end":{"line":36,"column":14}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":56}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":23}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":66}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":20}},"27":{"start":{"line":50,"column":8},"end":{"line":50,"column":78}},"28":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"29":{"start":{"line":55,"column":8},"end":{"line":55,"column":64}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":20}},"31":{"start":{"line":60,"column":8},"end":{"line":60,"column":136}},"32":{"start":{"line":60,"column":84},"end":{"line":60,"column":125}},"33":{"start":{"line":61,"column":8},"end":{"line":61,"column":20}},"34":{"start":{"line":65,"column":8},"end":{"line":75,"column":9}},"35":{"start":{"line":66,"column":27},"end":{"line":66,"column":29}},"36":{"start":{"line":67,"column":12},"end":{"line":70,"column":15}},"37":{"start":{"line":67,"column":35},"end":{"line":67,"column":76}},"38":{"start":{"line":69,"column":16},"end":{"line":69,"column":100}},"39":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"40":{"start":{"line":71,"column":39},"end":{"line":71,"column":80}},"41":{"start":{"line":72,"column":16},"end":{"line":72,"column":66}},"42":{"start":{"line":74,"column":12},"end":{"line":74,"column":71}},"43":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"44":{"start":{"line":80,"column":8},"end":{"line":90,"column":9}},"45":{"start":{"line":81,"column":27},"end":{"line":81,"column":29}},"46":{"start":{"line":82,"column":12},"end":{"line":85,"column":15}},"47":{"start":{"line":82,"column":35},"end":{"line":82,"column":99}},"48":{"start":{"line":84,"column":16},"end":{"line":84,"column":100}},"49":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"50":{"start":{"line":86,"column":39},"end":{"line":86,"column":103}},"51":{"start":{"line":87,"column":16},"end":{"line":87,"column":66}},"52":{"start":{"line":89,"column":12},"end":{"line":89,"column":71}},"53":{"start":{"line":91,"column":8},"end":{"line":91,"column":20}},"54":{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},"55":{"start":{"line":96,"column":27},"end":{"line":96,"column":29}},"56":{"start":{"line":97,"column":12},"end":{"line":100,"column":15}},"57":{"start":{"line":99,"column":16},"end":{"line":99,"column":130}},"58":{"start":{"line":101,"column":12},"end":{"line":101,"column":74}},"59":{"start":{"line":103,"column":8},"end":{"line":103,"column":20}},"60":{"start":{"line":107,"column":8},"end":{"line":107,"column":122}},"61":{"start":{"line":107,"column":88},"end":{"line":107,"column":111}},"62":{"start":{"line":108,"column":8},"end":{"line":108,"column":20}},"63":{"start":{"line":112,"column":18},"end":{"line":112,"column":40}},"64":{"start":{"line":113,"column":8},"end":{"line":119,"column":9}},"65":{"start":{"line":113,"column":21},"end":{"line":113,"column":22}},"66":{"start":{"line":114,"column":12},"end":{"line":118,"column":13}},"67":{"start":{"line":115,"column":29},"end":{"line":115,"column":89}},"68":{"start":{"line":116,"column":30},"end":{"line":116,"column":87}},"69":{"start":{"line":116,"column":53},"end":{"line":116,"column":79}},"70":{"start":{"line":117,"column":16},"end":{"line":117,"column":60}},"71":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"72":{"start":{"line":121,"column":8},"end":{"line":121,"column":20}},"73":{"start":{"line":125,"column":18},"end":{"line":125,"column":41}},"74":{"start":{"line":126,"column":8},"end":{"line":137,"column":9}},"75":{"start":{"line":126,"column":21},"end":{"line":126,"column":22}},"76":{"start":{"line":127,"column":12},"end":{"line":136,"column":13}},"77":{"start":{"line":128,"column":29},"end":{"line":128,"column":90}},"78":{"start":{"line":129,"column":37},"end":{"line":129,"column":87}},"79":{"start":{"line":129,"column":60},"end":{"line":129,"column":86}},"80":{"start":{"line":130,"column":24},"end":{"line":130,"column":26}},"81":{"start":{"line":131,"column":16},"end":{"line":133,"column":19}},"82":{"start":{"line":132,"column":20},"end":{"line":132,"column":48}},"83":{"start":{"line":134,"column":16},"end":{"line":134,"column":45}},"84":{"start":{"line":135,"column":16},"end":{"line":135,"column":57}},"85":{"start":{"line":138,"column":8},"end":{"line":138,"column":33}},"86":{"start":{"line":139,"column":8},"end":{"line":139,"column":20}},"87":{"start":{"line":143,"column":18},"end":{"line":143,"column":40}},"88":{"start":{"line":144,"column":8},"end":{"line":150,"column":9}},"89":{"start":{"line":144,"column":21},"end":{"line":144,"column":22}},"90":{"start":{"line":145,"column":12},"end":{"line":149,"column":13}},"91":{"start":{"line":146,"column":29},"end":{"line":146,"column":89}},"92":{"start":{"line":147,"column":30},"end":{"line":147,"column":93}},"93":{"start":{"line":147,"column":53},"end":{"line":147,"column":85}},"94":{"start":{"line":148,"column":16},"end":{"line":148,"column":60}},"95":{"start":{"line":151,"column":8},"end":{"line":151,"column":33}},"96":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"97":{"start":{"line":156,"column":18},"end":{"line":156,"column":41}},"98":{"start":{"line":157,"column":8},"end":{"line":168,"column":9}},"99":{"start":{"line":157,"column":21},"end":{"line":157,"column":22}},"100":{"start":{"line":158,"column":12},"end":{"line":167,"column":13}},"101":{"start":{"line":159,"column":29},"end":{"line":159,"column":90}},"102":{"start":{"line":160,"column":37},"end":{"line":160,"column":93}},"103":{"start":{"line":160,"column":60},"end":{"line":160,"column":92}},"104":{"start":{"line":161,"column":24},"end":{"line":161,"column":26}},"105":{"start":{"line":162,"column":16},"end":{"line":164,"column":19}},"106":{"start":{"line":163,"column":20},"end":{"line":163,"column":48}},"107":{"start":{"line":165,"column":16},"end":{"line":165,"column":45}},"108":{"start":{"line":166,"column":16},"end":{"line":166,"column":57}},"109":{"start":{"line":169,"column":8},"end":{"line":169,"column":33}},"110":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"111":{"start":{"line":174,"column":18},"end":{"line":174,"column":41}},"112":{"start":{"line":175,"column":8},"end":{"line":181,"column":9}},"113":{"start":{"line":175,"column":21},"end":{"line":175,"column":22}},"114":{"start":{"line":176,"column":12},"end":{"line":180,"column":13}},"115":{"start":{"line":177,"column":29},"end":{"line":177,"column":89}},"116":{"start":{"line":178,"column":30},"end":{"line":178,"column":119}},"117":{"start":{"line":178,"column":53},"end":{"line":178,"column":111}},"118":{"start":{"line":179,"column":16},"end":{"line":179,"column":60}},"119":{"start":{"line":182,"column":8},"end":{"line":182,"column":33}},"120":{"start":{"line":183,"column":8},"end":{"line":183,"column":20}},"121":{"start":{"line":187,"column":18},"end":{"line":187,"column":42}},"122":{"start":{"line":188,"column":8},"end":{"line":199,"column":9}},"123":{"start":{"line":188,"column":21},"end":{"line":188,"column":22}},"124":{"start":{"line":189,"column":12},"end":{"line":198,"column":13}},"125":{"start":{"line":190,"column":29},"end":{"line":190,"column":90}},"126":{"start":{"line":191,"column":37},"end":{"line":191,"column":119}},"127":{"start":{"line":191,"column":60},"end":{"line":191,"column":118}},"128":{"start":{"line":192,"column":24},"end":{"line":192,"column":26}},"129":{"start":{"line":193,"column":16},"end":{"line":195,"column":19}},"130":{"start":{"line":194,"column":20},"end":{"line":194,"column":48}},"131":{"start":{"line":196,"column":16},"end":{"line":196,"column":45}},"132":{"start":{"line":197,"column":16},"end":{"line":197,"column":57}},"133":{"start":{"line":200,"column":8},"end":{"line":200,"column":33}},"134":{"start":{"line":201,"column":8},"end":{"line":201,"column":20}},"135":{"start":{"line":205,"column":18},"end":{"line":205,"column":41}},"136":{"start":{"line":206,"column":8},"end":{"line":212,"column":9}},"137":{"start":{"line":206,"column":21},"end":{"line":206,"column":22}},"138":{"start":{"line":207,"column":12},"end":{"line":211,"column":13}},"139":{"start":{"line":208,"column":29},"end":{"line":208,"column":89}},"140":{"start":{"line":209,"column":30},"end":{"line":209,"column":113}},"141":{"start":{"line":209,"column":53},"end":{"line":209,"column":105}},"142":{"start":{"line":210,"column":16},"end":{"line":210,"column":60}},"143":{"start":{"line":213,"column":8},"end":{"line":213,"column":33}},"144":{"start":{"line":214,"column":8},"end":{"line":214,"column":20}},"145":{"start":{"line":218,"column":18},"end":{"line":218,"column":41}},"146":{"start":{"line":219,"column":8},"end":{"line":230,"column":9}},"147":{"start":{"line":219,"column":21},"end":{"line":219,"column":22}},"148":{"start":{"line":220,"column":12},"end":{"line":229,"column":13}},"149":{"start":{"line":221,"column":29},"end":{"line":221,"column":90}},"150":{"start":{"line":222,"column":37},"end":{"line":222,"column":113}},"151":{"start":{"line":222,"column":60},"end":{"line":222,"column":112}},"152":{"start":{"line":223,"column":24},"end":{"line":223,"column":26}},"153":{"start":{"line":224,"column":16},"end":{"line":226,"column":19}},"154":{"start":{"line":225,"column":20},"end":{"line":225,"column":48}},"155":{"start":{"line":227,"column":16},"end":{"line":227,"column":45}},"156":{"start":{"line":228,"column":16},"end":{"line":228,"column":57}},"157":{"start":{"line":231,"column":8},"end":{"line":231,"column":33}},"158":{"start":{"line":232,"column":8},"end":{"line":232,"column":20}},"159":{"start":{"line":237,"column":8},"end":{"line":240,"column":27}},"160":{"start":{"line":251,"column":8},"end":{"line":260,"column":27}},"161":{"start":{"line":275,"column":8},"end":{"line":288,"column":27}},"162":{"start":{"line":297,"column":8},"end":{"line":304,"column":27}},"163":{"start":{"line":307,"column":0},"end":{"line":307,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":21},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":18},"end":{"line":26,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":42,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":27},"end":{"line":47,"column":5}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":38},"end":{"line":52,"column":5}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":48},"end":{"line":57,"column":5}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":44},"end":{"line":62,"column":5}},"line":59},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":76},"end":{"line":60,"column":77}},"loc":{"start":{"line":60,"column":84},"end":{"line":60,"column":125}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":44},"end":{"line":77,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":27},"end":{"line":67,"column":28}},"loc":{"start":{"line":67,"column":35},"end":{"line":67,"column":76}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":82},"end":{"line":67,"column":83}},"loc":{"start":{"line":67,"column":90},"end":{"line":70,"column":13}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":31},"end":{"line":71,"column":32}},"loc":{"start":{"line":71,"column":39},"end":{"line":71,"column":80}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":42},"end":{"line":92,"column":5}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":82,"column":27},"end":{"line":82,"column":28}},"loc":{"start":{"line":82,"column":35},"end":{"line":82,"column":99}},"line":82},"14":{"name":"(anonymous_14)","decl":{"start":{"line":82,"column":105},"end":{"line":82,"column":106}},"loc":{"start":{"line":82,"column":113},"end":{"line":85,"column":13}},"line":82},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":31},"end":{"line":86,"column":32}},"loc":{"start":{"line":86,"column":39},"end":{"line":86,"column":103}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":35},"end":{"line":104,"column":5}},"line":94},"17":{"name":"(anonymous_17)","decl":{"start":{"line":97,"column":24},"end":{"line":97,"column":25}},"loc":{"start":{"line":97,"column":32},"end":{"line":100,"column":13}},"line":97},"18":{"name":"(anonymous_18)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":29},"end":{"line":109,"column":5}},"line":106},"19":{"name":"(anonymous_19)","decl":{"start":{"line":107,"column":78},"end":{"line":107,"column":79}},"loc":{"start":{"line":107,"column":88},"end":{"line":107,"column":111}},"line":107},"20":{"name":"(anonymous_20)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":32},"end":{"line":122,"column":5}},"line":111},"21":{"name":"(anonymous_21)","decl":{"start":{"line":116,"column":45},"end":{"line":116,"column":46}},"loc":{"start":{"line":116,"column":53},"end":{"line":116,"column":79}},"line":116},"22":{"name":"(anonymous_22)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":33},"end":{"line":140,"column":5}},"line":124},"23":{"name":"(anonymous_23)","decl":{"start":{"line":129,"column":52},"end":{"line":129,"column":53}},"loc":{"start":{"line":129,"column":60},"end":{"line":129,"column":86}},"line":129},"24":{"name":"(anonymous_24)","decl":{"start":{"line":131,"column":33},"end":{"line":131,"column":34}},"loc":{"start":{"line":131,"column":41},"end":{"line":133,"column":17}},"line":131},"25":{"name":"(anonymous_25)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":34},"end":{"line":153,"column":5}},"line":142},"26":{"name":"(anonymous_26)","decl":{"start":{"line":147,"column":45},"end":{"line":147,"column":46}},"loc":{"start":{"line":147,"column":53},"end":{"line":147,"column":85}},"line":147},"27":{"name":"(anonymous_27)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":35},"end":{"line":171,"column":5}},"line":155},"28":{"name":"(anonymous_28)","decl":{"start":{"line":160,"column":52},"end":{"line":160,"column":53}},"loc":{"start":{"line":160,"column":60},"end":{"line":160,"column":92}},"line":160},"29":{"name":"(anonymous_29)","decl":{"start":{"line":162,"column":33},"end":{"line":162,"column":34}},"loc":{"start":{"line":162,"column":41},"end":{"line":164,"column":17}},"line":162},"30":{"name":"(anonymous_30)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":39},"end":{"line":184,"column":5}},"line":173},"31":{"name":"(anonymous_31)","decl":{"start":{"line":178,"column":45},"end":{"line":178,"column":46}},"loc":{"start":{"line":178,"column":53},"end":{"line":178,"column":111}},"line":178},"32":{"name":"(anonymous_32)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":40},"end":{"line":202,"column":5}},"line":186},"33":{"name":"(anonymous_33)","decl":{"start":{"line":191,"column":52},"end":{"line":191,"column":53}},"loc":{"start":{"line":191,"column":60},"end":{"line":191,"column":118}},"line":191},"34":{"name":"(anonymous_34)","decl":{"start":{"line":193,"column":33},"end":{"line":193,"column":34}},"loc":{"start":{"line":193,"column":41},"end":{"line":195,"column":17}},"line":193},"35":{"name":"(anonymous_35)","decl":{"start":{"line":204,"column":4},"end":{"line":204,"column":5}},"loc":{"start":{"line":204,"column":37},"end":{"line":215,"column":5}},"line":204},"36":{"name":"(anonymous_36)","decl":{"start":{"line":209,"column":45},"end":{"line":209,"column":46}},"loc":{"start":{"line":209,"column":53},"end":{"line":209,"column":105}},"line":209},"37":{"name":"(anonymous_37)","decl":{"start":{"line":217,"column":4},"end":{"line":217,"column":5}},"loc":{"start":{"line":217,"column":38},"end":{"line":233,"column":5}},"line":217},"38":{"name":"(anonymous_38)","decl":{"start":{"line":222,"column":52},"end":{"line":222,"column":53}},"loc":{"start":{"line":222,"column":60},"end":{"line":222,"column":112}},"line":222},"39":{"name":"(anonymous_39)","decl":{"start":{"line":224,"column":33},"end":{"line":224,"column":34}},"loc":{"start":{"line":224,"column":41},"end":{"line":226,"column":17}},"line":224},"40":{"name":"(anonymous_40)","decl":{"start":{"line":236,"column":4},"end":{"line":236,"column":5}},"loc":{"start":{"line":236,"column":52},"end":{"line":241,"column":5}},"line":236},"41":{"name":"(anonymous_41)","decl":{"start":{"line":250,"column":4},"end":{"line":250,"column":5}},"loc":{"start":{"line":250,"column":50},"end":{"line":261,"column":5}},"line":250},"42":{"name":"(anonymous_42)","decl":{"start":{"line":274,"column":4},"end":{"line":274,"column":5}},"loc":{"start":{"line":274,"column":51},"end":{"line":289,"column":5}},"line":274},"43":{"name":"(anonymous_43)","decl":{"start":{"line":296,"column":4},"end":{"line":296,"column":5}},"loc":{"start":{"line":296,"column":39},"end":{"line":305,"column":5}},"line":296}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":12,"column":25}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":12,"column":25}},{"start":{"line":11,"column":8},"end":{"line":12,"column":25}}],"line":11},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":14,"column":25}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":14,"column":25}},{"start":{"line":13,"column":8},"end":{"line":14,"column":25}}],"line":13},"2":{"loc":{"start":{"line":15,"column":8},"end":{"line":16,"column":25}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":16,"column":25}},{"start":{"line":15,"column":8},"end":{"line":16,"column":25}}],"line":15},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":18,"column":25}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":18,"column":25}},{"start":{"line":17,"column":8},"end":{"line":18,"column":25}}],"line":17},"4":{"loc":{"start":{"line":19,"column":8},"end":{"line":20,"column":25}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":20,"column":25}},{"start":{"line":19,"column":8},"end":{"line":20,"column":25}}],"line":19},"5":{"loc":{"start":{"line":21,"column":8},"end":{"line":22,"column":25}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":22,"column":25}},{"start":{"line":21,"column":8},"end":{"line":22,"column":25}}],"line":21},"6":{"loc":{"start":{"line":23,"column":8},"end":{"line":24,"column":25}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":24,"column":25}},{"start":{"line":23,"column":8},"end":{"line":24,"column":25}}],"line":23},"7":{"loc":{"start":{"line":29,"column":8},"end":{"line":30,"column":23}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":30,"column":23}},{"start":{"line":29,"column":8},"end":{"line":30,"column":23}}],"line":29},"8":{"loc":{"start":{"line":54,"column":24},"end":{"line":54,"column":46}},"type":"default-arg","locations":[{"start":{"line":54,"column":43},"end":{"line":54,"column":46}}],"line":54},"9":{"loc":{"start":{"line":65,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":75,"column":9}},{"start":{"line":65,"column":8},"end":{"line":75,"column":9}}],"line":65},"10":{"loc":{"start":{"line":69,"column":29},"end":{"line":69,"column":91}},"type":"cond-expr","locations":[{"start":{"line":69,"column":76},"end":{"line":69,"column":82}},{"start":{"line":69,"column":85},"end":{"line":69,"column":91}}],"line":69},"11":{"loc":{"start":{"line":69,"column":29},"end":{"line":69,"column":73}},"type":"binary-expr","locations":[{"start":{"line":69,"column":29},"end":{"line":69,"column":56}},{"start":{"line":69,"column":60},"end":{"line":69,"column":73}}],"line":69},"12":{"loc":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},{"start":{"line":71,"column":12},"end":{"line":73,"column":13}}],"line":71},"13":{"loc":{"start":{"line":80,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":90,"column":9}},{"start":{"line":80,"column":8},"end":{"line":90,"column":9}}],"line":80},"14":{"loc":{"start":{"line":82,"column":35},"end":{"line":82,"column":99}},"type":"binary-expr","locations":[{"start":{"line":82,"column":35},"end":{"line":82,"column":76}},{"start":{"line":82,"column":80},"end":{"line":82,"column":99}}],"line":82},"15":{"loc":{"start":{"line":84,"column":29},"end":{"line":84,"column":91}},"type":"cond-expr","locations":[{"start":{"line":84,"column":76},"end":{"line":84,"column":82}},{"start":{"line":84,"column":85},"end":{"line":84,"column":91}}],"line":84},"16":{"loc":{"start":{"line":84,"column":29},"end":{"line":84,"column":73}},"type":"binary-expr","locations":[{"start":{"line":84,"column":29},"end":{"line":84,"column":56}},{"start":{"line":84,"column":60},"end":{"line":84,"column":73}}],"line":84},"17":{"loc":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},{"start":{"line":86,"column":12},"end":{"line":88,"column":13}}],"line":86},"18":{"loc":{"start":{"line":86,"column":39},"end":{"line":86,"column":103}},"type":"binary-expr","locations":[{"start":{"line":86,"column":39},"end":{"line":86,"column":80}},{"start":{"line":86,"column":84},"end":{"line":86,"column":103}}],"line":86},"19":{"loc":{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},{"start":{"line":95,"column":8},"end":{"line":102,"column":9}}],"line":95},"20":{"loc":{"start":{"line":99,"column":29},"end":{"line":99,"column":91}},"type":"cond-expr","locations":[{"start":{"line":99,"column":76},"end":{"line":99,"column":82}},{"start":{"line":99,"column":85},"end":{"line":99,"column":91}}],"line":99},"21":{"loc":{"start":{"line":99,"column":29},"end":{"line":99,"column":73}},"type":"binary-expr","locations":[{"start":{"line":99,"column":29},"end":{"line":99,"column":56}},{"start":{"line":99,"column":60},"end":{"line":99,"column":73}}],"line":99},"22":{"loc":{"start":{"line":114,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":118,"column":13}},{"start":{"line":114,"column":12},"end":{"line":118,"column":13}}],"line":114},"23":{"loc":{"start":{"line":127,"column":12},"end":{"line":136,"column":13}},"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":136,"column":13}},{"start":{"line":127,"column":12},"end":{"line":136,"column":13}}],"line":127},"24":{"loc":{"start":{"line":145,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":149,"column":13}},{"start":{"line":145,"column":12},"end":{"line":149,"column":13}}],"line":145},"25":{"loc":{"start":{"line":158,"column":12},"end":{"line":167,"column":13}},"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":167,"column":13}},{"start":{"line":158,"column":12},"end":{"line":167,"column":13}}],"line":158},"26":{"loc":{"start":{"line":176,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":180,"column":13}},{"start":{"line":176,"column":12},"end":{"line":180,"column":13}}],"line":176},"27":{"loc":{"start":{"line":178,"column":53},"end":{"line":178,"column":111}},"type":"binary-expr","locations":[{"start":{"line":178,"column":53},"end":{"line":178,"column":85}},{"start":{"line":178,"column":89},"end":{"line":178,"column":111}}],"line":178},"28":{"loc":{"start":{"line":189,"column":12},"end":{"line":198,"column":13}},"type":"if","locations":[{"start":{"line":189,"column":12},"end":{"line":198,"column":13}},{"start":{"line":189,"column":12},"end":{"line":198,"column":13}}],"line":189},"29":{"loc":{"start":{"line":191,"column":60},"end":{"line":191,"column":118}},"type":"binary-expr","locations":[{"start":{"line":191,"column":60},"end":{"line":191,"column":92}},{"start":{"line":191,"column":96},"end":{"line":191,"column":118}}],"line":191},"30":{"loc":{"start":{"line":207,"column":12},"end":{"line":211,"column":13}},"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":211,"column":13}},{"start":{"line":207,"column":12},"end":{"line":211,"column":13}}],"line":207},"31":{"loc":{"start":{"line":209,"column":53},"end":{"line":209,"column":105}},"type":"binary-expr","locations":[{"start":{"line":209,"column":53},"end":{"line":209,"column":79}},{"start":{"line":209,"column":83},"end":{"line":209,"column":105}}],"line":209},"32":{"loc":{"start":{"line":220,"column":12},"end":{"line":229,"column":13}},"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":229,"column":13}},{"start":{"line":220,"column":12},"end":{"line":229,"column":13}}],"line":220},"33":{"loc":{"start":{"line":222,"column":60},"end":{"line":222,"column":112}},"type":"binary-expr","locations":[{"start":{"line":222,"column":60},"end":{"line":222,"column":86}},{"start":{"line":222,"column":90},"end":{"line":222,"column":112}}],"line":222}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":1,"6":4,"7":2,"8":2,"9":0,"10":2,"11":0,"12":2,"13":0,"14":2,"15":0,"16":2,"17":0,"18":2,"19":5,"20":3,"21":2,"22":2,"23":2,"24":1,"25":5,"26":5,"27":5,"28":5,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":5,"160":0,"161":0,"162":0,"163":1},"f":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":5,"41":0,"42":0,"43":0},"b":{"0":[1,4],"1":[2,2],"2":[0,2],"3":[0,2],"4":[0,2],"5":[0,2],"6":[0,2],"7":[3,2],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/manto/OneDrive/Documents/GitHub/mafia-bot/src/Classes/ScriptEngine.ts","sources":["C:/Users/manto/OneDrive/Documents/GitHub/mafia-bot/src/Classes/ScriptEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import MafiaUser from \"./MafiaUser\";\r\nconst {\r\n    Worker, isMainThread, parentPort, workerData,\r\n} = require('node:worker_threads');\r\n\r\nconst {VM} = require('vm2');\r\n\r\n\r\n\r\nexport default class ScriptEngine {\r\n\r\n\r\n    private _eqv: string;\r\n\r\n    constructor(eqv: string) {\r\n        this._eqv = eqv;\r\n    }\r\n\r\n\r\n    //validates a non harmful environment\r\n    public validate(eqv: string): boolean {\r\n        if (eqv.includes('require'))\r\n            return false;\r\n        if (eqv.includes(\"import\"))\r\n            return false;\r\n        if (eqv.includes(\"process\"))\r\n            return false;\r\n        if (eqv.includes(\"eval\"))\r\n            return false;\r\n        if (eqv.includes(\"Function\"))\r\n            return false;\r\n        if (eqv.includes(\"async\"))\r\n            return false;\r\n        if (eqv.includes(\"await\"))\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    //runs equation\r\n    public runEquation(): unknown | number {\r\n        if (!this.validate(this._eqv))\r\n            return NaN;\r\n        try {\r\n            const vm = new VM({\r\n                timeout: 100,\r\n                allowAsync: false,\r\n                sandbox: {}\r\n            });\r\n            return vm.run(\" (()=>\" + this._eqv + \")()\");\r\n        } catch (err) {\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n\r\n    //{pCount} - total count of players\r\n    public setPlayerCount(pCount: number) {\r\n        this._eqv = this._eqv.replace(\"{pCount}\", String(pCount));\r\n        return this;\r\n    }\r\n\r\n    //{oRolesPCount} - other roles that had been generated\r\n    public setOtherPlayerCount(oRolesPCount: number) {\r\n        this._eqv = this._eqv.replace(\"{oRolesPCount}\", String(oRolesPCount));\r\n        return this;\r\n    }\r\n\r\n    // % - string identifier by default\r\n    public setStringIdentifier(stringIdentifier: string = \"%\") {\r\n        this._eqv = this._eqv.split(stringIdentifier).join(\"`\");\r\n        return this;\r\n    }\r\n\r\n    //{yRoleCount} - total count of your role players\r\n    public setYourRolePlayersCount(owner: MafiaUser, players: MafiaUser[]) {\r\n        this._eqv = this._eqv.replace(\"{yRoleCount}\", String(players.filter(item => item.role.RoleName == owner.role.RoleName).length));\r\n        return this;\r\n    }\r\n\r\n    //{oPlayersTRole} - other people of his role in format {player}, {player}...\r\n    public setOtherPlayersThatRole(owner: MafiaUser, players: MafiaUser[]) {\r\n        if (this._eqv.includes(\"{aPlayersTRole}\")) {\r\n            let aPlayers = \"\";\r\n            players.filter(item => item.role.RoleName == owner.role.RoleName).map(item => {\r\n                aPlayers += item.dsUser?.tag + \", \";\r\n            })\r\n            if (players.filter(item => item.role.RoleName == owner.role.RoleName).length > 0) {\r\n                aPlayers = aPlayers.slice(0, aPlayers.length - 3);\r\n            }\r\n            this._eqv = this._eqv.replace(\"{aPlayersTRole}\", aPlayers);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    //{aPlayersTRole} - all people of his role in format {player}, {player}...\r\n    public setAllPlayersThatRole(owner: MafiaUser, players: MafiaUser[]) {\r\n        if (this._eqv.includes(\"{oPlayersTRole}\")) {\r\n            let aPlayers = \"\";\r\n            players.filter(item => item.role.RoleName == owner.role.RoleName && item.id != owner.id).map(item => {\r\n                aPlayers += item.dsUser?.tag + \", \";\r\n            })\r\n            if (players.filter(item => item.role.RoleName == owner.role.RoleName && item.id != owner.id).length > 0) {\r\n                aPlayers = aPlayers.slice(0, aPlayers.length - 3);\r\n            }\r\n            this._eqv = this._eqv.replace(\"{oPlayersTRole}\", aPlayers);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    //{oPlayersAllRoles} - all people roles in format {player} — {role}, \\n\r\n    public setAllPlayersAllRoles(players: MafiaUser[]) {\r\n        if (this._eqv.includes(\"{oPlayersAllRoles}\")) {\r\n            let aPlayers = \"\";\r\n            players.map(item => {\r\n                aPlayers += item.dsUser?.tag + \" — \" + item.role.RoleName + \" \\n\";\r\n            })\r\n            this._eqv = this._eqv.replace(\"{oPlayersAllRoles}\", aPlayers);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    //{aPlayerCount} - total alive players\r\n    public setAlivePlayers(players: MafiaUser[]) {\r\n        this._eqv = this._eqv.replace(\"{aPlayerCount}\", String(players.filter((item) => item.isKilled === false).length));\r\n        return this;\r\n    }\r\n\r\n    //{r:<rolename>:count} - count of one role people e.g. {r:mafia:count}\r\n    public setRoleCountByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{r:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':count}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const count = players.filter(item => item.role.RoleName == name).length;\r\n                arr[i] = count + arr[i].split(':count}')[1];\r\n\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n    //{sr:<rolename>:string} - string of one role people e.g. {sr:mafia:string} - {player}, {player}...\r\n    public setRoleStringByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{sr:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':string}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const playersNames = players.filter(item => item.role.RoleName == name);\r\n                let a = \"\";\r\n                playersNames.map(item => {\r\n                    a += item.dsUser.tag + \", \";\r\n                })\r\n                a = a.slice(0, a.length - 2);\r\n                arr[i] = a + arr[i].split(':string}')[1];\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n\r\n    //{a:<actionname>:count} - count of people with action e.g. {a:kill:count}\r\n    public setActionCountByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{a:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':count}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const count = players.filter(item => item.role.ActionOnSelect == name).length;\r\n                arr[i] = count + arr[i].split(':count}')[1]\r\n\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n    //{sa:<actionname>:string} - string of people with action e.g. {sa:kill:string} - {player}, {player}...\r\n    public setActionStringByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{sa:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':string}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const playersNames = players.filter(item => item.role.ActionOnSelect == name);\r\n                let a = \"\";\r\n                playersNames.map(item => {\r\n                    a += item.dsUser.tag + \", \";\r\n                })\r\n                a = a.slice(0, a.length - 2);\r\n                arr[i] = a + arr[i].split(':string}')[1];\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n    //{aa:<actionname>:count} - count of alive people with action e.g. {aa:kill:count}\r\n    public setAliveActionCountByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{aa:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':count}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const count = players.filter(item => item.role.ActionOnSelect == name && item.isKilled == false).length;\r\n                arr[i] = count + arr[i].split(':count}')[1];\r\n\r\n\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n    //{saa:<actionname>:string} - string of one action alive people e.g. {saa:kill:string} - {player}, {player}...\r\n    public setAliveActionStringByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{saa:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':string}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const playersNames = players.filter(item => item.role.ActionOnSelect == name  && item.isKilled == false);\r\n                let a = \"\";\r\n                playersNames.map(item => {\r\n                    a += item.dsUser.tag + \", \";\r\n                });\r\n                a = a.slice(0, a.length - 2);\r\n                arr[i] = a + arr[i].split(':string}')[1];\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n\r\n    //{ar:<rolename>:count} - count of one role alive people e.g. {ar:mafia:count}\r\n    public setAliveRoleCountByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{ar:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':count}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const count = players.filter(item => item.role.RoleName == name && item.isKilled == false).length;\r\n                arr[i] = count + arr[i].split(':count}')[1];\r\n\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n    //{sar:<rolename>:string} - string of one role alive people e.g. {sar:mafia:string} - {player}, {player}...\r\n    public setAliveRoleStringByName(players: MafiaUser[]) {\r\n        let arr = this._eqv.split('{sr:');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (i !== 0) {\r\n                const name = arr[i].split(':string}')[0].replace(\"<\", \"\").replace(\">\", \"\");\r\n                const playersNames = players.filter(item => item.role.RoleName == name && item.isKilled == false);\r\n                let a = \"\";\r\n                playersNames.map(item => {\r\n                    a += item.dsUser.tag + \", \";\r\n                });\r\n                a = a.slice(0, a.length - 2);\r\n                arr[i] = a + arr[i].split(':string}')[1];\r\n            }\r\n        }\r\n        this._eqv = arr.join('');\r\n        return this;\r\n    }\r\n\r\n    //{pCount}\r\n    //{oRolesPCount}\r\n    public static RoleCountCalc(eqv: string, pCount: number, oRolesPCount: number): number {\r\n        return new ScriptEngine(eqv)\r\n            .setPlayerCount(pCount)\r\n            .setOtherPlayerCount(oRolesPCount)\r\n            .runEquation() as number;\r\n    }\r\n\r\n    // %\r\n    //{pCount}\r\n    //{yRoleCount}\r\n    //{oPlayersTRole}\r\n    //{aPlayersTRole}\r\n    //{oPlayersAllRoles}\r\n    //{r:<rolename>:count}\r\n    //{a:<actionname>:count}\r\n    public static DescriptionEngine(eqv: string, players: MafiaUser[], owner: MafiaUser): string | number {\r\n        return new ScriptEngine(eqv)\r\n            .setStringIdentifier()\r\n            .setPlayerCount(players.length)\r\n            .setYourRolePlayersCount(owner, players)\r\n            .setOtherPlayersThatRole(owner, players)\r\n            .setAllPlayersThatRole(owner, players)\r\n            .setAllPlayersAllRoles(players)\r\n            .setRoleCountByName(players)\r\n            .setActionCountByName(players)\r\n            .runEquation() as string | number;\r\n    }\r\n\r\n    // %\r\n    //{pCount}\r\n    //{aPlayerCount}\r\n    //{oPlayersAllRoles}\r\n    //{sr:<rolename>:string}\r\n    //{sa:<actionname>:string}\r\n    //{saa:<actionname>:string}\r\n    //{sar:<rolename>:string}\r\n    //{r:<rolename>:count}\r\n    //{a:<actionname>:count}\r\n    //{aa:<actionname>:count}\r\n    //{ar:<rolename>:count}\r\n    public static ConditionEmbedDescription(eqv: string, players: MafiaUser[]): string | number {\r\n        return new ScriptEngine(eqv)\r\n            .setStringIdentifier()\r\n            .setPlayerCount(players.length)\r\n            .setAlivePlayers(players)\r\n            .setAllPlayersAllRoles(players)\r\n            .setRoleStringByName(players)\r\n            .setActionStringByName(players)\r\n            .setAliveActionStringByName(players)\r\n            .setAliveRoleStringByName(players)\r\n            .setRoleCountByName(players)\r\n            .setActionCountByName(players)\r\n            .setAliveActionCountByName(players)\r\n            .setAliveRoleCountByName(players)\r\n            .runEquation() as string | number;\r\n    }\r\n\r\n    //{pCount}\r\n    //{aPlayerCount}\r\n    //{r:<rolename>:count}\r\n    //{a:<actionname>:count}\r\n    //{aa:<actionname>:count}\r\n    //{ar:<rolename>:count}\r\n    public static WinningEngine(eqv: string, players: MafiaUser[]): boolean | number {\r\n        return new ScriptEngine(eqv)\r\n            .setPlayerCount(players.length)\r\n            .setAlivePlayers(players)\r\n            .setRoleCountByName(players)\r\n            .setActionCountByName(players)\r\n            .setAliveActionCountByName(players)\r\n            .setAliveRoleCountByName(players)\r\n            .runEquation() as boolean | number;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"78328e4b037235b6daeea407d13153f569e1e10b","contentHash":"9b85edc675890cb4721219fa1c7a2a0c217c505ae8fcd1e3ff13fa31f166b8a0"}}